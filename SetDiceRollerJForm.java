/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package setdiceroller;

import java.util.Random;

/**
 *
 * @author Phoenix Lord
 */
public class SetDiceRollerJForm extends javax.swing.JFrame {

    /**
     * Creates new form SetDiceRollerJForm
     */
    public SetDiceRollerJForm() {
        initComponents();

    }

    public int timesRolled = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldDisplay = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        jButtonClearDisplay = new javax.swing.JButton();
        jButtonRoll = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxToHit = new javax.swing.JComboBox<>();
        jComboBoxToWound = new javax.swing.JComboBox<>();
        jCheckBoxShred = new javax.swing.JCheckBox();
        jCheckBoxTwinLinked = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxSave = new javax.swing.JComboBox<>();
        jCheckBoxFeelNoPain = new javax.swing.JCheckBox();
        jComboBoxFeelNoPain = new javax.swing.JComboBox<>();
        jComboBoxRRToWound = new javax.swing.JComboBox<>();
        jComboBoxRRToHit = new javax.swing.JComboBox<>();
        jCheckBoxRRFNP = new javax.swing.JCheckBox();
        jComboBoxRRFNP = new javax.swing.JComboBox<>();
        jCheckBoxRRSave = new javax.swing.JCheckBox();
        jComboBoxRRSave = new javax.swing.JComboBox<>();
        jCheckBoxRad = new javax.swing.JCheckBox();
        jCheckBoxTesla = new javax.swing.JCheckBox();
        jLabelTimesRolled = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuAbout = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SetDiceRoller And Analyzer");
        setBackground(new java.awt.Color(0, 0, 0));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(0, 0, 0));
        setLocation(new java.awt.Point(200, 100));
        setLocationByPlatform(true);
        setResizable(false);
        setSize(new java.awt.Dimension(900, 500));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(10);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Number Of Dice"));

        jTextFieldDisplay.setEditable(false);
        jTextFieldDisplay.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTextFieldDisplay.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldDisplay.setText("0");
        jTextFieldDisplay.setToolTipText("Display");

        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton0.setText("0");
        jButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton0ActionPerformed(evt);
            }
        });

        jButtonClearDisplay.setText("Clear");
        jButtonClearDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearDisplayActionPerformed(evt);
            }
        });

        jButtonRoll.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonRoll.setText("Roll");
        jButtonRoll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRollActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonClearDisplay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldDisplay, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton0, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButtonRoll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jTextFieldDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton0)
                .addGap(18, 18, 18)
                .addComponent(jButtonClearDisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonRoll, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Target Numbers"));

        jLabel1.setText("To Hit");

        jLabel2.setText("To Wound");

        jComboBoxToHit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auto", "2+", "3+", "4+", "5+", "6+" }));
        jComboBoxToHit.setSelectedIndex(3);

        jComboBoxToWound.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auto", "2+", "3+", "4+", "5+", "6+" }));
        jComboBoxToWound.setSelectedIndex(3);
        jComboBoxToWound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxToWoundActionPerformed(evt);
            }
        });

        jCheckBoxShred.setText("Reroll To Wound");
        jCheckBoxShred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShredActionPerformed(evt);
            }
        });

        jCheckBoxTwinLinked.setText("Reroll To Hit");
        jCheckBoxTwinLinked.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTwinLinkedActionPerformed(evt);
            }
        });

        jLabel3.setText("Save");

        jComboBoxSave.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2+", "3+", "4+", "5+", "6+", "Fail" }));
        jComboBoxSave.setSelectedIndex(2);
        jComboBoxSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSaveActionPerformed(evt);
            }
        });

        jCheckBoxFeelNoPain.setText("Feel No Pain");

        jComboBoxFeelNoPain.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "6+", "5+", "4+", "3+" }));
        jComboBoxFeelNoPain.setSelectedIndex(1);
        jComboBoxFeelNoPain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFeelNoPainActionPerformed(evt);
            }
        });

        jComboBoxRRToWound.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2-", "All Failed", "All Succeeded" }));
        jComboBoxRRToWound.setSelectedIndex(2);
        jComboBoxRRToWound.setToolTipText("");

        jComboBoxRRToHit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2-", "All Failed", "All Succeeded" }));
        jComboBoxRRToHit.setSelectedIndex(2);
        jComboBoxRRToHit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRRToHitActionPerformed(evt);
            }
        });

        jCheckBoxRRFNP.setText("Reroll Feel No Pain");

        jComboBoxRRFNP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "All Failed" }));
        jComboBoxRRFNP.setSelectedIndex(1);

        jCheckBoxRRSave.setText("Reroll Save");

        jComboBoxRRSave.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "All Failed", "All Succeeded" }));
        jComboBoxRRSave.setSelectedIndex(1);

        jCheckBoxRad.setText("Rad Poisoning");

        jCheckBoxTesla.setText("Tesla/Shock");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBoxTwinLinked)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxRRToHit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addComponent(jCheckBoxShred)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(jComboBoxRRToWound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBoxRRSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxRRSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxTesla)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jComboBoxToHit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxToWound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addComponent(jLabel3)
                            .addComponent(jComboBoxSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jCheckBoxRRFNP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxRRFNP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jCheckBoxFeelNoPain)
                                .addGap(30, 30, 30)
                                .addComponent(jComboBoxFeelNoPain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCheckBoxRad))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxToHit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxToWound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxTwinLinked)
                    .addComponent(jComboBoxRRToHit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxShred)
                    .addComponent(jComboBoxRRToWound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxRad)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxTesla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxRRSave)
                    .addComponent(jComboBoxRRSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxFeelNoPain)
                    .addComponent(jComboBoxFeelNoPain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxRRFNP)
                    .addComponent(jComboBoxRRFNP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabelTimesRolled.setBackground(new java.awt.Color(255, 255, 255));
        jLabelTimesRolled.setForeground(new java.awt.Color(0, 51, 255));
        jLabelTimesRolled.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jMenuFile.setText("File");
        jMenuFile.setName(""); // NOI18N

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItem2);

        jMenuBar1.add(jMenuFile);

        jMenuAbout.setText("About");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuAbout.add(jMenuItem1);

        jMenuBar1.add(jMenuAbout);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addComponent(jLabelTimesRolled, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelTimesRolled, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );

        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxShredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxShredActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDisplay.getText().length() >= 9) {
            return;
        }
        int temp = Integer.parseInt(jTextFieldDisplay.getText());
        temp *= 10;
        temp += 1;
        jTextFieldDisplay.setText(Integer.toString(temp));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDisplay.getText().length() >= 9) {
            return;
        }
        int temp = Integer.parseInt(jTextFieldDisplay.getText());
        temp *= 10;
        temp += 2;
        jTextFieldDisplay.setText(Integer.toString(temp));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDisplay.getText().length() >= 9) {
            return;
        }
        int temp = Integer.parseInt(jTextFieldDisplay.getText());
        temp *= 10;
        temp += 3;
        jTextFieldDisplay.setText(Integer.toString(temp));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDisplay.getText().length() >= 9) {
            return;
        }
        int temp = Integer.parseInt(jTextFieldDisplay.getText());
        temp *= 10;
        temp += 4;
        jTextFieldDisplay.setText(Integer.toString(temp));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDisplay.getText().length() >= 9) {
            return;
        }
        int temp = Integer.parseInt(jTextFieldDisplay.getText());
        temp *= 10;
        temp += 5;
        jTextFieldDisplay.setText(Integer.toString(temp));
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDisplay.getText().length() >= 9) {
            return;
        }
        int temp = Integer.parseInt(jTextFieldDisplay.getText());
        temp *= 10;
        temp += 6;
        jTextFieldDisplay.setText(Integer.toString(temp));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDisplay.getText().length() >= 9) {
            return;
        }
        int temp = Integer.parseInt(jTextFieldDisplay.getText());
        temp *= 10;
        temp += 7;
        jTextFieldDisplay.setText(Integer.toString(temp));
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDisplay.getText().length() >= 9) {
            return;
        }
        int temp = Integer.parseInt(jTextFieldDisplay.getText());
        temp *= 10;
        temp += 8;
        jTextFieldDisplay.setText(Integer.toString(temp));
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDisplay.getText().length() >= 9) {
            return;
        }
        int temp = Integer.parseInt(jTextFieldDisplay.getText());
        temp *= 10;
        temp += 9;
        jTextFieldDisplay.setText(Integer.toString(temp));
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton0ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDisplay.getText().length() >= 9) {
            return;
        }
        int temp = Integer.parseInt(jTextFieldDisplay.getText());
        temp *= 10;
        jTextFieldDisplay.setText(Integer.toString(temp));
    }//GEN-LAST:event_jButton0ActionPerformed

    private void jButtonClearDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearDisplayActionPerformed
        // TODO add your handling code here:
        jTextFieldDisplay.setText("0");
        jTextArea1.setText("");
        timesRolled = 0;
        jLabelTimesRolled.setText("");
    }//GEN-LAST:event_jButtonClearDisplayActionPerformed

    private void jComboBoxFeelNoPainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFeelNoPainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxFeelNoPainActionPerformed

    private void jCheckBoxTwinLinkedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTwinLinkedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxTwinLinkedActionPerformed

    private void jComboBoxSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSaveActionPerformed

    private void jButtonRollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRollActionPerformed
        // TODO add your handling code here:
        timesRolled++;
        Random Generator = new Random();
        int amount = Integer.parseInt(jTextFieldDisplay.getText());
        Rolls Roll = new Rolls();
        String s = "";

        Roll = Roller(amount, Roll, Generator);

        int prehit = 0;
        int posthit = 0;
        
        if (jComboBoxToHit.getSelectedItem() == "Auto") {
            prehit = Roll.getRollsAll();
        }
        else if (jComboBoxToHit.getSelectedItem() == "2+") {
            prehit = Roll.getRolls2plus();
        }
        else if (jComboBoxToHit.getSelectedItem() == "3+") {
            prehit = Roll.getRolls3plus();
        }
        else if (jComboBoxToHit.getSelectedItem() == "4+") {
            prehit = Roll.getRolls4plus();
        }
        else if (jComboBoxToHit.getSelectedItem() == "5+") {
            prehit = Roll.getRolls5plus();
        }
        else if (jComboBoxToHit.getSelectedItem() == "6+") {
            prehit = Roll.getRolls6();
        }
        if (jCheckBoxTwinLinked.isSelected()) {
            if (jComboBoxToHit.getSelectedItem() == "Auto") {
                posthit = prehit;
            }
            else if (jComboBoxToHit.getSelectedItem() == "2+") {
                if (jComboBoxRRToHit.getSelectedItem() == "1" || jComboBoxRRToHit.getSelectedItem() == "2-" 
                        || jComboBoxRRToHit.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(1, Roll, Generator);
                    posthit = Roll.getRolls2plus();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(2, Roll, Generator);
                    posthit = Roll.getRolls2plus();
                }
            }
            else if (jComboBoxToHit.getSelectedItem() == "3+") {
                if (jComboBoxRRToHit.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    posthit = Roll.getRolls3plus();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "2-" 
                        || jComboBoxRRToHit.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(2, Roll, Generator);
                    posthit = Roll.getRolls3plus();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(3, Roll, Generator);
                    posthit = Roll.getRolls3plus();
                }
            }
            else if (jComboBoxToHit.getSelectedItem() == "4+") {
                if (jComboBoxRRToHit.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    posthit = Roll.getRolls4plus();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "2-" ) {
                    Roll = RerollerDown(2, Roll, Generator);
                    posthit = Roll.getRolls4plus();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(3, Roll, Generator);
                    posthit = Roll.getRolls4plus();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(4, Roll, Generator);
                    posthit = Roll.getRolls4plus();
                }
            }
            else if (jComboBoxToHit.getSelectedItem() == "5+") {
                if (jComboBoxRRToHit.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    posthit = Roll.getRolls5plus();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "2-" ) {
                    Roll = RerollerDown(2, Roll, Generator);
                    posthit = Roll.getRolls5plus();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(4, Roll, Generator);
                    posthit = Roll.getRolls5plus();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(5, Roll, Generator);
                    posthit = Roll.getRolls5plus();
                }
            }
            else if (jComboBoxToHit.getSelectedItem() == "6+") {
                if (jComboBoxRRToHit.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    posthit = Roll.getRolls6();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "2-" ) {
                    Roll = RerollerDown(2, Roll, Generator);
                    posthit = Roll.getRolls6();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(5, Roll, Generator);
                    posthit = Roll.getRolls6();
                }
                else if (jComboBoxRRToHit.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(6, Roll, Generator);
                    posthit = Roll.getRolls6();
                }
            }
            if (jCheckBoxTesla.isSelected()) {
                int sixes = Roll.getRolls6();
                for (int i = 0; i < sixes; i++) {
                    posthit++;
                    posthit++;
                }
            }
            s += String.format("Hits before reroll: %s (%.1f%%)%nHits after reroll: %s (%.1f%%)%n", prehit,
                ((double) prehit / (double) amount) * 100, posthit, ((double) posthit / (double) amount) * 100);
            double dhit = ((double) (posthit - prehit) / (double) prehit) * 100;
            s += String.format("Reroll netted %s extra hits, or +%.1f%%%n%n", (posthit - prehit), dhit);
            if (jCheckBoxTesla.isSelected()) {
                s += String.format("Tesla Netted %s extra hits, or +%.1f%%%n%n", (Roll.getRolls6()*2), 
                        ((double) (Roll.getRolls6()*2) / (double) (posthit-(Roll.getRolls6()*2)))*100);
            }
        }
        else {
            posthit = prehit;
            if (jCheckBoxTesla.isSelected()) {
                int sixes = Roll.getRolls6();
                for (int i = 0; i < sixes; i++) {
                    posthit++;
                    posthit++;
                }
            }
            s += String.format("Hits: %s (%.1f%%)%n%n", posthit, ((double) posthit / (double) amount) * 100);
            if (jCheckBoxTesla.isSelected()) {
                s += String.format("Tesla Netted %s extra hits, or +%.1f%%%n%n", (Roll.getRolls6()*2), 
                        ((double) (Roll.getRolls6()*2) / (double) (posthit-(Roll.getRolls6()*2)))*100);
            }
        }
        
        Roll.clearRollsAll();
        Roll = Roller(posthit, Roll, Generator);

        int prewound = 0;
        int postwound = 0;
       
        if (jComboBoxToWound.getSelectedItem() == "Auto") {
            prewound = Roll.getRollsAll();
        }
        else if (jComboBoxToWound.getSelectedItem() == "2+") {
            prewound = Roll.getRolls2plus();
        }
        else if (jComboBoxToWound.getSelectedItem() == "3+") {
            prewound = Roll.getRolls3plus();
        }
        else if (jComboBoxToWound.getSelectedItem() == "4+") {
            prewound = Roll.getRolls4plus();
        }
        else if (jComboBoxToWound.getSelectedItem() == "5+") {
            prewound = Roll.getRolls5plus();
        }
        else if (jComboBoxToWound.getSelectedItem() == "6+") {
            prewound = Roll.getRolls6();
        }
        if (jCheckBoxShred.isSelected()) {
            if (jComboBoxToWound.getSelectedItem() == "Auto") {
                postwound = prewound;
            }
            if (jComboBoxToWound.getSelectedItem() == "2+") {
                if (jComboBoxRRToWound.getSelectedItem() == "1" || jComboBoxRRToWound.getSelectedItem() == "2-" 
                        || jComboBoxRRToWound.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(1, Roll, Generator);
                    postwound = Roll.getRolls2plus();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(2, Roll, Generator);
                    postwound = Roll.getRolls2plus();
                }
            }
            else if (jComboBoxToWound.getSelectedItem() == "3+") {
                if (jComboBoxRRToWound.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    postwound = Roll.getRolls3plus();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "2-" 
                        || jComboBoxRRToWound.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(2, Roll, Generator);
                    postwound = Roll.getRolls3plus();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(3, Roll, Generator);
                    postwound = Roll.getRolls3plus();
                }
            }
            else if (jComboBoxToWound.getSelectedItem() == "4+") {
                if (jComboBoxRRToWound.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    postwound = Roll.getRolls4plus();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "2-" ) {
                    Roll = RerollerDown(2, Roll, Generator);
                    postwound = Roll.getRolls4plus();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(3, Roll, Generator);
                    postwound = Roll.getRolls4plus();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(4, Roll, Generator);
                    postwound = Roll.getRolls4plus();
                }
            }
            else if (jComboBoxToWound.getSelectedItem() == "5+") {
                if (jComboBoxRRToWound.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    postwound = Roll.getRolls5plus();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "2-" ) {
                    Roll = RerollerDown(2, Roll, Generator);
                    postwound = Roll.getRolls5plus();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(4, Roll, Generator);
                    postwound = Roll.getRolls5plus();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(5, Roll, Generator);
                    postwound = Roll.getRolls5plus();
                }
            }
            else if (jComboBoxToWound.getSelectedItem() == "6+") {
                if (jComboBoxRRToWound.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    postwound = Roll.getRolls6();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "2-" ) {
                    Roll = RerollerDown(2, Roll, Generator);
                    postwound = Roll.getRolls6();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(5, Roll, Generator);
                    postwound = Roll.getRolls6();
                }
                else if (jComboBoxRRToWound.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(6, Roll, Generator);
                    postwound = Roll.getRolls6();
                }
            }
            if (jCheckBoxRad.isSelected()) {
                int sixes = Roll.getRolls6();
                for (int i = 0; i < sixes; i++) {
                    postwound++;
                }
            }
            s += String.format("Wounds before reroll: %s (%.1f%%)%nWounds after reroll: %s (%.1f%%)%n", prewound,
                ((double) prewound / (double) posthit) * 100, postwound, ((double) postwound / (double) posthit) * 100);
            double dwound = ((double) (postwound - prewound) / (double) prewound) * 100;
            s += String.format("Reroll netted %s extra wounds, or +%.1f%%%n%n", (postwound - prewound), dwound);
            if (jCheckBoxRad.isSelected()) {
                s += String.format("Rad Poisoning netted %s extra wounds, or +%.1f%%%n%n", (Roll.getRolls6()), 
                        ((double) (Roll.getRolls6()) / (double) (postwound-(Roll.getRolls6())))*100);
            }
        }
        else {
            postwound = prewound;
            if (jCheckBoxRad.isSelected()) {
                int sixes = Roll.getRolls6();
                for (int i = 0; i < sixes; i++) {
                    postwound++;
                }
            }
            s+= String.format("Wounds: %s (%.1f%%)%n%n", postwound,((double) postwound / (double) posthit) * 100);
            if (jCheckBoxRad.isSelected()) {
                s += String.format("Rad Poisoning netted %s extra hits, or +%.1f%%%n%n", (Roll.getRolls6()), 
                        ((double) (Roll.getRolls6()) / (double) (postwound-(Roll.getRolls6())))*100);
            }
        }
        
        
        Roll.clearRollsAll();
        Roll = Roller(postwound, Roll, Generator);

        int preunsaved = 0;
        int postunsaved = 0;
        if (jComboBoxSave.getSelectedItem() == "2+") {
            preunsaved = Roll.getRolls1();
        } else if (jComboBoxSave.getSelectedItem() == "3+") {
            preunsaved = Roll.getRolls2minus();
        } else if (jComboBoxSave.getSelectedItem() == "4+") {
            preunsaved = Roll.getRolls3minus();
        } else if (jComboBoxSave.getSelectedItem() == "5+") {
            preunsaved = Roll.getRolls4minus();
        } else if (jComboBoxSave.getSelectedItem() == "6+") {
            preunsaved = Roll.getRolls5minus();
        } else if (jComboBoxSave.getSelectedItem() == "Fail") {
            preunsaved = Roll.getRollsAll();
        }
        if (jCheckBoxRRSave.isSelected()) {
            if (jComboBoxSave.getSelectedItem() == "2+") {
                if (jComboBoxRRSave.getSelectedItem() == "1" || jComboBoxRRSave.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(1, Roll, Generator);
                    postunsaved = Roll.getRolls1();
                }
                else if (jComboBoxRRSave.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(2, Roll, Generator);
                    postunsaved = Roll.getRolls1();
                }
            }
            else if (jComboBoxSave.getSelectedItem() == "3+") {
                if (jComboBoxRRSave.getSelectedItem() == "1" ) {
                    Roll = RerollerDown(1, Roll, Generator);
                    postunsaved = Roll.getRolls2minus();
                }
                else if (jComboBoxRRSave.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(2, Roll, Generator);
                    postunsaved = Roll.getRolls2minus();
                }
                else if (jComboBoxRRSave.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(3, Roll, Generator);
                    postunsaved = Roll.getRolls2minus();
                }
            }
            else if (jComboBoxSave.getSelectedItem() == "4+") {
                if (jComboBoxRRSave.getSelectedItem() == "1" ) {
                    Roll = RerollerDown(1, Roll, Generator);
                    postunsaved = Roll.getRolls3minus();
                }
                else if (jComboBoxRRSave.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(3, Roll, Generator);
                    postunsaved = Roll.getRolls3minus();
                }
                else if (jComboBoxRRSave.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(4, Roll, Generator);
                    postunsaved = Roll.getRolls3minus();
                }
            }
            else if (jComboBoxSave.getSelectedItem() == "5+") {
                if (jComboBoxRRSave.getSelectedItem() == "1" ) {
                    Roll = RerollerDown(1, Roll, Generator);
                    postunsaved = Roll.getRolls4minus();
                }
                else if (jComboBoxRRSave.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(4, Roll, Generator);
                    postunsaved = Roll.getRolls4minus();
                }
                else if (jComboBoxRRSave.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(5, Roll, Generator);
                    postunsaved = Roll.getRolls4minus();
                }
            }
            else if (jComboBoxSave.getSelectedItem() == "6+") {
                if (jComboBoxRRSave.getSelectedItem() == "1" ) {
                    Roll = RerollerDown(1, Roll, Generator);
                    postunsaved = Roll.getRolls5minus();
                }
                else if (jComboBoxRRSave.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(5, Roll, Generator);
                    postunsaved = Roll.getRolls5minus();
                }
                else if (jComboBoxRRSave.getSelectedItem() == "All Succeeded") {
                    Roll = RerollerUp(6, Roll, Generator);
                    postunsaved = Roll.getRolls5minus();
                }
            }
            else if (jComboBoxSave.getSelectedItem() == "Fail") {
                postunsaved = Roll.getRollsAll();
            }
            s += String.format("Saved Wounds before reroll: %s (%.1f%%)%nSaved Wounds after reroll: %s (%.1f%%)%n", (postwound-preunsaved),
                ((double) (postwound-preunsaved) / (double) postwound) * 100, (postwound-postunsaved), 
                ((double) (postwound-postunsaved) / (double) postwound) * 100);
            double dunsaved = ((double) ((postwound-postunsaved) - (postwound-preunsaved)) / (double) (postwound-preunsaved)) * 100;
            s += String.format("Reroll netted %s extra saves, or +%.1f%%%n%n", ((postwound-postunsaved) - (postwound-preunsaved)), dunsaved);
        }
        else {
            postunsaved = preunsaved;
            s += String.format("Saved Wounds: %s (%.1f%%)%n%n", (postwound-postunsaved), 
                    ((double) (postwound-preunsaved) / (double) postwound) * 100);
        }
        
        s += String.format("Unsaved Wounds: %s (%.1f%%)%n%n", (postunsaved), 
                    ((double) (preunsaved) / (double) postwound) * 100);
        
        Roll.clearRollsAll();

        int feltPain = postunsaved;
        int postfnp = 0;
        Roll = Roller(postunsaved, Roll, Generator);
        
        if (jCheckBoxFeelNoPain.isSelected()) {
            if (jComboBoxFeelNoPain.getSelectedItem() == "6+") {
                feltPain = Roll.getRolls5minus();
            } else if (jComboBoxFeelNoPain.getSelectedItem() == "5+") {
                feltPain = Roll.getRolls4minus();
            } else if (jComboBoxFeelNoPain.getSelectedItem() == "4+") {
                feltPain = Roll.getRolls3minus();
            } else if (jComboBoxFeelNoPain.getSelectedItem() == "3+") {
                feltPain = Roll.getRolls2minus();
            }
        }

        postfnp = feltPain;
        
        if (jCheckBoxRRFNP.isSelected() && jCheckBoxFeelNoPain.isSelected()) {
            if (jComboBoxFeelNoPain.getSelectedItem() == "6+") {
                if (jComboBoxRRFNP.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    postfnp = Roll.getRolls5minus();
                }
                else if (jComboBoxRRFNP.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(5, Roll, Generator);
                    postfnp = Roll.getRolls5minus();
                }
            } 
            else if (jComboBoxFeelNoPain.getSelectedItem() == "5+") {
                if (jComboBoxRRFNP.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    postfnp = Roll.getRolls4minus();
                }
                else if (jComboBoxRRFNP.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(4, Roll, Generator);
                    postfnp = Roll.getRolls4minus();
                }
            } 
            else if (jComboBoxFeelNoPain.getSelectedItem() == "4+") {
                if (jComboBoxRRFNP.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    postfnp = Roll.getRolls3minus();
                }
                else if (jComboBoxRRFNP.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(3, Roll, Generator);
                    postfnp = Roll.getRolls3minus();
                }
            } 
            else if (jComboBoxFeelNoPain.getSelectedItem() == "3+") {
                if (jComboBoxRRFNP.getSelectedItem() == "1") {
                    Roll = RerollerDown(1, Roll, Generator);
                    postfnp = Roll.getRolls2minus();
                }
                else if (jComboBoxRRFNP.getSelectedItem() == "All Failed") {
                    Roll = RerollerDown(2, Roll, Generator);
                    postfnp = Roll.getRolls2minus();
                }
            }
            
            
        }

        if (jCheckBoxRRFNP.isSelected() && jCheckBoxFeelNoPain.isSelected()) {
            s += String.format("Feel no Pain saved before reroll: %s (%.1f%%)%n", (postunsaved - feltPain), 
                    ((double) (postunsaved - feltPain) / (double) (postunsaved)) * 100);
            s += String.format("Feel no Pain saved after reroll: %s (%.1f%%)%n", (postunsaved - postfnp), 
                    ((double) (postunsaved - postfnp) / (double) (postunsaved)) * 100);
            s += String.format("Reroll netted %s extra saves, or +%.1f%%%n%n", (postunsaved - postfnp) - (postunsaved - feltPain), 
                    (double) (((postunsaved - postfnp) - (postunsaved - feltPain)) / (double) (postunsaved - feltPain)) *100 );
        }
        else if(jCheckBoxFeelNoPain.isSelected()) {
            double dunsaved = ((double) (postunsaved - feltPain) / (double) (postunsaved)) * 100;
            s += String.format("Feel no pain saved %s wounds, or %.1f%%%n%n", (postunsaved - feltPain), dunsaved);
        }
        
        String g = String.format("You caused %s wounds (%.1f%%)", postfnp, ((double) postfnp/(double) amount) *100);

        s += g;
        jTextArea1.setText(s);
        jLabelTimesRolled.setText(String.format("%s Times Rolled", timesRolled));

    }//GEN-LAST:event_jButtonRollActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        AboutJFrame AB = new AboutJFrame();
        AB.AboutNewScreen();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jComboBoxToWoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxToWoundActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxToWoundActionPerformed

    private void jComboBoxRRToHitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRRToHitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxRRToHitActionPerformed

    public static Rolls Roller(int times, Rolls TMP, Random Generator) {

        for (int i = 0; i < times; i++) {
            int tmp = Generator.nextInt(6) + 1;
            if (tmp == 1) {
                TMP.addOneToRolls1();
            } else if (tmp == 2) {
                TMP.addOneToRolls2();
            } else if (tmp == 3) {
                TMP.addOneToRolls3();
            } else if (tmp == 4) {
                TMP.addOneToRolls4();
            } else if (tmp == 5) {
                TMP.addOneToRolls5();
            } else if (tmp == 6) {
                TMP.addOneToRolls6();
            } else {
                System.exit(0);
            }
        }
        return TMP;
    }

    public static Rolls RerollerDown(int heitauusiks, Rolls TMP, Random Generator) {

        int tmp = 0;
        if (heitauusiks == 1) {
            tmp = TMP.getRolls1();
            TMP.clearRolls1();
        } else if (heitauusiks == 2) {
            tmp = TMP.getRolls2minus();
            TMP.clearRolls1();
            TMP.clearRolls2();
        } else if (heitauusiks == 3) {
            tmp = TMP.getRolls3minus();
            TMP.clearRolls1();
            TMP.clearRolls2();
            TMP.clearRolls3();
        } else if (heitauusiks == 4) {
            tmp = TMP.getRolls4minus();
            TMP.clearRolls1();
            TMP.clearRolls2();
            TMP.clearRolls3();
            TMP.clearRolls4();
        } else if (heitauusiks == 5) {
            tmp = TMP.getRolls5minus();
            TMP.clearRolls1();
            TMP.clearRolls2();
            TMP.clearRolls3();
            TMP.clearRolls4();
            TMP.clearRolls5();
        } else {
            System.exit(0);
        }

        TMP = Roller(tmp, TMP, Generator);

        return TMP;
    }

    public static Rolls RerollerUp(int heitauusiks, Rolls TMP, Random Generator) {
        int tmp = 0;

        if (heitauusiks == 6) {
            tmp = TMP.getRolls6();
            TMP.clearRolls6();
        } else if (heitauusiks == 5) {
            tmp = TMP.getRolls5plus();
            TMP.clearRolls6();
            TMP.clearRolls5();
        } else if (heitauusiks == 4) {
            tmp = TMP.getRolls4plus();
            TMP.clearRolls6();
            TMP.clearRolls5();
            TMP.clearRolls4();
        } else if (heitauusiks == 3) {
            tmp = TMP.getRolls3plus();
            TMP.clearRolls6();
            TMP.clearRolls5();
            TMP.clearRolls4();
            TMP.clearRolls3();
        } else if (heitauusiks == 2) {
            tmp = TMP.getRolls2plus();
            TMP.clearRolls6();
            TMP.clearRolls5();
            TMP.clearRolls4();
            TMP.clearRolls3();
            TMP.clearRolls2();
        } else {
            System.exit(0);
        }

        TMP = Roller(tmp, TMP, Generator);

        return TMP;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetDiceRollerJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetDiceRollerJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetDiceRollerJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetDiceRollerJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SetDiceRollerJForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonClearDisplay;
    private javax.swing.JButton jButtonRoll;
    private javax.swing.JCheckBox jCheckBoxFeelNoPain;
    private javax.swing.JCheckBox jCheckBoxRRFNP;
    private javax.swing.JCheckBox jCheckBoxRRSave;
    private javax.swing.JCheckBox jCheckBoxRad;
    private javax.swing.JCheckBox jCheckBoxShred;
    private javax.swing.JCheckBox jCheckBoxTesla;
    private javax.swing.JCheckBox jCheckBoxTwinLinked;
    private javax.swing.JComboBox<String> jComboBoxFeelNoPain;
    private javax.swing.JComboBox<String> jComboBoxRRFNP;
    private javax.swing.JComboBox<String> jComboBoxRRSave;
    private javax.swing.JComboBox<String> jComboBoxRRToHit;
    private javax.swing.JComboBox<String> jComboBoxRRToWound;
    private javax.swing.JComboBox<String> jComboBoxSave;
    private javax.swing.JComboBox<String> jComboBoxToHit;
    private javax.swing.JComboBox<String> jComboBoxToWound;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelTimesRolled;
    private javax.swing.JMenu jMenuAbout;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldDisplay;
    // End of variables declaration//GEN-END:variables
}
